# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

scopeName: 'source.trf'
name: 'TRF'

fileTypes: ['trf']

patterns: [
    { include: '#comment' }
    { include: '#section' }
    { include: '#instruction' }
]

repository:
    comment: {
        comment: 'Comments starting with //'
        name: 'comment.line.trf'
        match: '//.*$'
    }
    section: {
        comment: 'Matches init and layer sections'
        match: '(init|layer)(?:\\[(.*)\\])*$'
        name: 'meta.section.trf'
        captures:
            1: name: 'entity.name.tag.trf'
            2: patterns: [
                { include: '#constants' }
            ]
    }
    instruction: {
        comment: 'Matches instructions'
        match: '(?:([\\w-]+)(:)([@\\w\\d,./_\\+\\-~%\\*]+))([\\|\\s])'
        name: 'meta.instruction.trf'
        captures:
            1: name: 'entity.name.function.trf'
            2: name: 'keyword.control.trf'
            4: name: 'keyword.control.trf'
            3: {
                patterns: [
                    { include: '#argument' }
                ]
            }
    }
    argument: {
        comment: 'Matches arguments'
        match: '(.+?)(?:,|$)'
        name: 'meta.argument.trf'
        captures:
            1: {
                patterns: [
                    { include: '#constant' }
                    { include: '#omesVar' }
                    { include: '#path' }
                ]
            }
    }
    constant: {
        comment: 'Matches integer numbers'
        match: '^\\d+$'
        name: 'constant.numeric.trf'
    }
    omesVar: {
        comment: 'Matches constants of the form VAR-NAME'
        match: '^[A-Z]+-[A-Z-]+[A-Z]$'
        name: 'support.constant.trf'
    }
    path: {
        comment: 'Matches paths to files'
        match: '^[@/\\.\\w\\d_-]+\\.[A-Za-z0-9]+$'
        name: 'string.unquoted.trf'
    }
